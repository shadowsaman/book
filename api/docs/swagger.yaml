definitions:
  models.Book:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateBook:
    properties:
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.CreateCategory:
    properties:
      created_at:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Empty:
    type: object
  models.EmptyCat:
    type: object
  models.GetListBookResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      count:
        type: integer
    type: object
  models.GetListCategoryResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      count:
        type: integer
    type: object
  models.UpdateBook:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.UpdateBookSwag:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.UpdateCategorySwag:
    properties:
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /book:
    get:
      consumes:
      - application/json
      description: Get List Book
      operationId: get_list_book
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetListBook
          schema:
            $ref: '#/definitions/models.GetListBookResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Book
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Create Book
      operationId: create_book
      parameters:
      - description: CreateBookRequestBody
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBook'
      produces:
      - application/json
      responses:
        "201":
          description: GetBookBody
          schema:
            $ref: '#/definitions/models.CreateBook'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Book
      tags:
      - Book
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Book
      operationId: delete_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: DeleteBookBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Book
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: Get By Id Book
      operationId: get_by_id_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetIdBookBody
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By Id Book
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Update Book
      operationId: update_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateBookRequestBody
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookSwag'
      produces:
      - application/json
      responses:
        "200":
          description: UpdateBookBody
          schema:
            $ref: '#/definitions/models.UpdateBook'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Book
      tags:
      - Book
  /category:
    get:
      consumes:
      - application/json
      description: Get List Category
      operationId: get_list_category
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetCategoryListBody
          schema:
            $ref: '#/definitions/models.GetListCategoryResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create Category
      operationId: create_category
      parameters:
      - description: CreateCategoryRequestBody
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "201":
          description: GetCategoryBody
          schema:
            $ref: '#/definitions/models.CreateCategory'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Category
      operationId: delete_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteCategoryBody
          schema:
            $ref: '#/definitions/models.EmptyCat'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Get By ID Category
      operationId: get_by_id_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetCategoryBody
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update Category
      operationId: update_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCategoryRequestBody
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategorySwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateCategoryBody
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Category
      tags:
      - Category
swagger: "2.0"
